/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as R403Import } from './routes/403'
import { Route as IndexImport } from './routes/index'
import { Route as UserUserImport } from './routes/User/_user'
import { Route as UserReqLeaveImport } from './routes/User/ReqLeave'
import { Route as UserProfileImport } from './routes/User/Profile'
import { Route as UserMarkitImport } from './routes/User/Markit'
import { Route as UserHomeImport } from './routes/User/Home'
import { Route as AuthSignUpImport } from './routes/Auth/SignUp'
import { Route as AuthSignInImport } from './routes/Auth/SignIn'
import { Route as AuthPasskeyImport } from './routes/Auth/Passkey'
import { Route as AuthForgotPasswordImport } from './routes/Auth/ForgotPassword'
import { Route as AuthAdminAuthImport } from './routes/Auth/AdminAuth'
import { Route as AdminProfileImport } from './routes/Admin/profile'
import { Route as AdminLogsImport } from './routes/Admin/logs'
import { Route as AdminEmployeesImport } from './routes/Admin/employees'
import { Route as AdminCompaniesImport } from './routes/Admin/companies'
import { Route as AdminAdminImport } from './routes/Admin/_admin'
import { Route as AdminHomeImport } from './routes/Admin/Home'

// Create Virtual Routes

const UserImport = createFileRoute('/User')()
const AdminImport = createFileRoute('/Admin')()

// Create/Update Routes

const UserRoute = UserImport.update({
  path: '/User',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/Admin',
  getParentRoute: () => rootRoute,
} as any)

const R403Route = R403Import.update({
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserRoute = UserUserImport.update({
  id: '/_user',
  getParentRoute: () => UserRoute,
} as any)

const UserReqLeaveRoute = UserReqLeaveImport.update({
  path: '/User/ReqLeave',
  getParentRoute: () => rootRoute,
} as any)

const UserProfileRoute = UserProfileImport.update({
  path: '/User/Profile',
  getParentRoute: () => rootRoute,
} as any)

const UserMarkitRoute = UserMarkitImport.update({
  path: '/User/Markit',
  getParentRoute: () => rootRoute,
} as any)

const UserHomeRoute = UserHomeImport.update({
  path: '/User/Home',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  path: '/Auth/SignUp',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  path: '/Auth/SignIn',
  getParentRoute: () => rootRoute,
} as any)

const AuthPasskeyRoute = AuthPasskeyImport.update({
  path: '/Auth/Passkey',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  path: '/Auth/ForgotPassword',
  getParentRoute: () => rootRoute,
} as any)

const AuthAdminAuthRoute = AuthAdminAuthImport.update({
  path: '/Auth/AdminAuth',
  getParentRoute: () => rootRoute,
} as any)

const AdminProfileRoute = AdminProfileImport.update({
  path: '/profile',
  getParentRoute: () => AdminRoute,
} as any)

const AdminLogsRoute = AdminLogsImport.update({
  path: '/logs',
  getParentRoute: () => AdminRoute,
} as any)

const AdminEmployeesRoute = AdminEmployeesImport.update({
  path: '/employees',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCompaniesRoute = AdminCompaniesImport.update({
  path: '/companies',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminRoute = AdminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any)

const AdminHomeRoute = AdminHomeImport.update({
  path: '/Admin/Home',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/403': {
      id: '/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof R403Import
      parentRoute: typeof rootRoute
    }
    '/Admin/Home': {
      id: '/Admin/Home'
      path: '/Admin/Home'
      fullPath: '/Admin/Home'
      preLoaderRoute: typeof AdminHomeImport
      parentRoute: typeof rootRoute
    }
    '/Admin': {
      id: '/Admin'
      path: '/Admin'
      fullPath: '/Admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/Admin/_admin': {
      id: '/Admin/_admin'
      path: '/Admin'
      fullPath: '/Admin'
      preLoaderRoute: typeof AdminAdminImport
      parentRoute: typeof AdminRoute
    }
    '/Admin/companies': {
      id: '/Admin/companies'
      path: '/companies'
      fullPath: '/Admin/companies'
      preLoaderRoute: typeof AdminCompaniesImport
      parentRoute: typeof AdminImport
    }
    '/Admin/employees': {
      id: '/Admin/employees'
      path: '/employees'
      fullPath: '/Admin/employees'
      preLoaderRoute: typeof AdminEmployeesImport
      parentRoute: typeof AdminImport
    }
    '/Admin/logs': {
      id: '/Admin/logs'
      path: '/logs'
      fullPath: '/Admin/logs'
      preLoaderRoute: typeof AdminLogsImport
      parentRoute: typeof AdminImport
    }
    '/Admin/profile': {
      id: '/Admin/profile'
      path: '/profile'
      fullPath: '/Admin/profile'
      preLoaderRoute: typeof AdminProfileImport
      parentRoute: typeof AdminImport
    }
    '/Auth/AdminAuth': {
      id: '/Auth/AdminAuth'
      path: '/Auth/AdminAuth'
      fullPath: '/Auth/AdminAuth'
      preLoaderRoute: typeof AuthAdminAuthImport
      parentRoute: typeof rootRoute
    }
    '/Auth/ForgotPassword': {
      id: '/Auth/ForgotPassword'
      path: '/Auth/ForgotPassword'
      fullPath: '/Auth/ForgotPassword'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/Auth/Passkey': {
      id: '/Auth/Passkey'
      path: '/Auth/Passkey'
      fullPath: '/Auth/Passkey'
      preLoaderRoute: typeof AuthPasskeyImport
      parentRoute: typeof rootRoute
    }
    '/Auth/SignIn': {
      id: '/Auth/SignIn'
      path: '/Auth/SignIn'
      fullPath: '/Auth/SignIn'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/Auth/SignUp': {
      id: '/Auth/SignUp'
      path: '/Auth/SignUp'
      fullPath: '/Auth/SignUp'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/User/Home': {
      id: '/User/Home'
      path: '/User/Home'
      fullPath: '/User/Home'
      preLoaderRoute: typeof UserHomeImport
      parentRoute: typeof rootRoute
    }
    '/User/Markit': {
      id: '/User/Markit'
      path: '/User/Markit'
      fullPath: '/User/Markit'
      preLoaderRoute: typeof UserMarkitImport
      parentRoute: typeof rootRoute
    }
    '/User/Profile': {
      id: '/User/Profile'
      path: '/User/Profile'
      fullPath: '/User/Profile'
      preLoaderRoute: typeof UserProfileImport
      parentRoute: typeof rootRoute
    }
    '/User/ReqLeave': {
      id: '/User/ReqLeave'
      path: '/User/ReqLeave'
      fullPath: '/User/ReqLeave'
      preLoaderRoute: typeof UserReqLeaveImport
      parentRoute: typeof rootRoute
    }
    '/User': {
      id: '/User'
      path: '/User'
      fullPath: '/User'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/User/_user': {
      id: '/User/_user'
      path: '/User'
      fullPath: '/User'
      preLoaderRoute: typeof UserUserImport
      parentRoute: typeof UserRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  R403Route,
  AdminHomeRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminCompaniesRoute,
    AdminEmployeesRoute,
    AdminLogsRoute,
    AdminProfileRoute,
  }),
  AuthAdminAuthRoute,
  AuthForgotPasswordRoute,
  AuthPasskeyRoute,
  AuthSignInRoute,
  AuthSignUpRoute,
  UserHomeRoute,
  UserMarkitRoute,
  UserProfileRoute,
  UserReqLeaveRoute,
  UserRoute: UserRoute.addChildren({}),
})

/* prettier-ignore-end */
